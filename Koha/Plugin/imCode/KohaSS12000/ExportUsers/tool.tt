[% USE gtx = Gettext('com.imcode.exportusers', language, mbf_path) %]
[% INCLUDE 'doc-head-open.inc' %]
    <title>[% 'Configuration imCode SS12000' | gettext %]</title>
[% INCLUDE 'doc-head-close.inc' %]

</head>

<body>
[% INCLUDE 'header.inc' %]
[% INCLUDE 'cat-search.inc' %]

<div id="breadcrumbs">
    <a href="/cgi-bin/koha/mainpage.pl">[% 'Home' | gettext %]</a> &rsaquo; 
    <a href="/cgi-bin/koha/plugins/plugins-home.pl">[% 'Plugins' | gettext %]</a> &rsaquo;  
    [% 'KohaSS12000 &rsaquo; Tool' | gettext %]
</div>

<div class="main container-fluid">
  <div class="row">
    <div class="col-sm-10 col-sm-push-2">
      <main>

        <h1>[% 'Tool' | gettext %]</h1>
        <br/>
        <form method="post" action="">
            <table><tr>
            <td>
                <select class="form-control" name="op">
                    <option value="cud-run-export" [% IF run_export %]SELECTED[% END %]>[% 'Start exporting data from the API' | gettext %]</option> 
                    <option value="cud-show-logs" [% IF logs %]SELECTED[% END %]>[% 'Show user export log' | gettext %]</option>
                    <option value="cud-show-stat" [% IF stats %]SELECTED[% END %]>[% 'Show user export statistics' | gettext %]</option>
                    <option value="cud-show-updates" [% IF updates %]SELECTED[% END %]>[% 'Show users data update' | gettext %]</option>
                </select>
                <input type="hidden" name="class" value="[% CLASS %]" />
                <input type="hidden" name="csrf_token" value="[% csrf_token %]">
                <input type="hidden" name="method" value="[% METHOD %]" />
            </td>
            <td>
                <input type="submit" value="[% 'Ok' | gettext %]" />
            </td>
            </tr></table>
        </form>

        [% IF run_export %]
            <div class="row">
                <div class="col-sm-10 col-sm-push-1">
                    <main>
                        <h1>[% 'SS12000 Export Users Tool' | gettext %]</h1>
                        
                        [% IF process_started %]
                            <div id="export-status">
                                <h3>Export Status</h3>
                                <div class="alert alert-info">
                                    <div id="status-message">
                                        <strong>Status:</strong> <span id="current-status">Initializing...</span>
                                    </div>
                                    <div id="process-info" style="display: none;">
                                        <strong>Process ID:</strong> <span id="process-pid"></span><br>
                                        <strong>Started:</strong> <span id="start-time"></span>
                                    </div>
                                </div>
                                
                                <button id="force-unlock" class="btn btn-primary" style="display: none;">
                                    [% 'Force Unlock Process' | gettext %]
                                </button>
                            </div>
                            
                            <div id="log-viewer" class="mt-4">
                                <h3>Process Log</h3>
                                <div class="well" style="max-height: 400px; overflow-y: auto;">
                                    <ul class="list-unstyled" id="log-contents"></ul>
                                </div>
                            </div>
                            
                            <script>
                                $(document).ready(function() {
                                    function updateStatus() {
                                        $.getJSON('/cgi-bin/koha/plugins/run.pl', {
                                            class: '[% CLASS %]',
                                            method: '[% METHOD %]',
                                            csrf_token: '[% csrf_token %]',
                                            op: 'cud-get-status'
                                        })
                                        .done(function(status) {
                                            let statusText = status.status;
                                            if (status.messages && status.messages.length > 0) {
                                                const message = status.messages[0].text;
                                                if (message && message.includes('EndLastPageFromAPI')) {
                                                    statusText += ' - ' + message;
                                                }
                                            }                                            
                                            $('#current-status').text(statusText);
                                            //$('#current-status').text(status.status);
                                            
                                            if (status.pid) {
                                                $('#process-info').show();
                                                $('#process-pid').text(status.pid);
                                                $('#start-time').text(new Date(status.started_at * 1000).toLocaleString());
                                            }
                                            
                                            // Show force unlock button if process seems stuck
                                            if (status.status === 'running' && 
                                                ((new Date().getTime() / 1000) - status.last_update) > 300) { // 5 minutes
                                                $('#force-unlock').show();
                                            }
                                            
                                            updateAlertClass(status.status);
                                            
                                            if (status.status === 'running') {
                                                setTimeout(updateStatus, 5000);
                                            }
                                        });
                                    }
                                    
                                    function updateAlertClass(status) {
                                        var $alert = $('.alert');
                                        $alert.removeClass('alert-info alert-success alert-danger alert-warning');
                                        
                                        switch(status) {
                                            case 'running':
                                                $alert.addClass('alert-info');
                                                break;
                                            case 'completed':
                                                $alert.addClass('alert-success');
                                                break;
                                            case 'error':
                                                $alert.addClass('alert-danger');
                                                break;
                                            default:
                                                $alert.addClass('alert-warning');
                                        }
                                    }
                                    
                                    function updateLog() {
                                        $.getJSON('/cgi-bin/koha/plugins/run.pl', {
                                            class: '[% CLASS %]',
                                            method: '[% METHOD %]',
                                            csrf_token: '[% csrf_token %]',
                                            op: 'cud-get-log'
                                        })
                                        .done(function(logLines) {
                                            var $logContents = $('#log-contents');
                                            $logContents.empty();
                                            
                                            logLines.forEach(function(line) {
                                                var $line = $('<li>');
                                                if (line.error) {
                                                    $line.addClass('text-danger');
                                                }
                                                $line.text(line.timestamp + ': ' + line.message);
                                                $logContents.append($line);
                                            });
                                            
                                            // Auto-scroll to bottom
                                            var $well = $('.well');
                                            $well.scrollTop($well[0].scrollHeight);

                                            setTimeout(updateLog, 5000);
                                        });
                                    }
                                    
                                    $('#force-unlock').click(function() {
                                        if (!confirm('[% 'Are you sure you want to force unlock the process? Only do this if the process is stuck' | gettext %]')) {
                                            $.getJSON('/cgi-bin/koha/plugins/run.pl', {
                                                class: '[% CLASS %]',
                                                method: '[% METHOD %]',
                                                csrf_token: '[% csrf_token %]',
                                                op: 'cud-force-unlock'
                                            })
                                            .done(function(result) {
                                                if (result.status === 'success') {
                                                    location.reload();
                                                } else {
                                                    alert(result.message);
                                                }
                                            });
                                        }
                                    });
                                    
                                    updateStatus();
                                    updateLog();
                                });
                            </script>
                        [% ELSE %]

                            <div class="alert alert-info">
                                <p>[% 'This tool will export users data using SS12000 format' | gettext %]</p>
                                <p>[% 'The process will run in the background and may take several minutes to complete' | gettext %]</p>
                            </div>
                            <div class="d-flex gap-2 align-items-center">
                                <form method="post" action="">
                                    <input type="hidden" name="class" value="[% CLASS %]"/>
                                    <input type="hidden" name="method" value="[% METHOD %]"/>
                                    <input type="hidden" name="op" value="cud-run-export"/>
                                    <input type="hidden" name="csrf_token" value="[% csrf_token %]">
                                    <input type="hidden" name="start_export" value="1"/>
                                    <button type="submit" class="btn btn-primary">[% 'Start Export' | gettext %]</button>
                                </form>

                                [% IF log_count %]
                                <div name="DivClearLogForm" style="display:inline-block;">
                                    <form method="post" action="" id="clearLogForm">
                                        <input type="hidden" name="class" value="[% CLASS %]" />
                                        <input type="hidden" name="method" value="[% METHOD %]" />
                                        <input type="hidden" name="op" value="cud-clearlog" />
                                        <input type="hidden" name="csrf_token" value="[% csrf_token %]">
                                        <input type="submit" class="btn btn-secondary" value="[% 'Set API scanner from the first page' | gettext %]" />
                                    </form>
                                </div>
                                <script>
                                document.querySelector('input[value="[% 'Set API scanner from the first page' | gettext %]"]').addEventListener('click', function(e) {
                                    if (!confirm('[% 'Are you sure you want to clear the log? This action cannot be undone.' | gettext %]')) {
                                        e.preventDefault();
                                    }
                                });
                                </script>                                      
                                [% END %]
                            </div>

                        [% END %]

                    </main>
                </div>
            </div>
        [% END %]

        [% IF logs.size > 0 %]
        <br/>
        <h2>[% 'Logs Lines' | gettext %]</h2>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>ID</th>
                    [% IF debug_mode == "Yes" %]<th>[% 'Page token Next' | gettext %]</th>[% END %]
                    <th>[% 'Record Count' | gettext %]</th>
                    [% IF debug_mode == "Yes" %]<th>[% 'Response' | gettext %]</th>[% END %]
                    [% IF debug_mode == "No" %]<th>[% 'Data Status' | gettext %]</th>[% END %]
                    <th>[% 'Created At' | gettext %]</th>
                    <th>[% 'Is Processed' | gettext %]</th>
                </tr>
            </thead>
            <tbody>
                [% FOREACH log IN logs %]
                    <tr>
                        <td>[% log.id %]</td>
                        [% IF debug_mode == "Yes" %]<td class="truncate-text">[% log.page_token_next %]</td>[% END %]
                        <td>[% log.record_count %]</td>
                        <td class="truncate-text">[% log.response %]</td>
                        <td>[% log.created_at %]</td>
                        <td>[% IF log.is_processed == 1 %][% 'Yes' | gettext %][% ELSE %][% 'No' | gettext %][% END %]</td>
                    </tr>
                [% END %]
            </tbody>
        </table>

            [% IF total_pages>0 %]
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    [% IF prev_page >0 %]
                        <li class="page-item"><a class="page-link" href="?class=[% CLASS %]&method=[% METHOD %]&op=cud-show-logs&page=[% prev_page %]">[% 'Previous page' | gettext %]</a></li>
                    [% END %]

                    [% SET max_pages = 10 %] 

                    [% SET start_page = current_page - 5 %]
                    [% SET end_page = current_page + 4 %]

                    [% IF start_page < 1 %]
                        [% SET start_page = 1 %]
                        [% SET end_page = 10 %]
                    [% ELSIF end_page > total_pages %]
                        [% SET end_page = total_pages %]
                        [% SET start_page = total_pages - 9 %]
                    [% END %]

                    [% SET page_number = start_page %] 

                    [% WHILE page_number <= end_page %]
                        [% IF page_number >= 1 && page_number <= total_pages %] 
                            [% SET is_current = (page_number == current_page) %]
                            <li class="page-item [% IF is_current %]active[% END %]">
                                <a class="page-link" href="?class=[% CLASS %]&method=[% METHOD %]&op=cud-show-logs&page=[% page_number %]">
                                    [% page_number %]
                                </a>
                            </li>
                        [% END %]
                        [% SET page_number = page_number + 1 %] 
                    [% END %]                   

                    [% IF next_page >0 %]
                        <li class="page-item"><a class="page-link" href="?class=[% CLASS %]&method=[% METHOD %]&op=cud-show-logs&page=[% next_page %]">[% 'Next page' | gettext %]</a></li>
                    [% END %]

                    [% IF total_pages>10 && next_page < total_pages - 1 && page_number < total_pages %]
                        <li class="page-item"><a class="page-link" href="?class=[% CLASS %]&method=[% METHOD %]&op=cud-show-logs&page=[% total_pages %]">[% 'Last' | gettext %], [% total_pages %] [% 'page' | gettext %]</a></li>
                    [% END %] 

                </ul>
            </nav>
            [% END %]

        [% END %]

        [% IF stats.size > 0 %]
        <br/>
        <h2>[% 'Last Statistics Lines' | gettext %]</h2>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>[% 'Added' | gettext %]</th>
                    <th>[% 'Updated' | gettext %]</th>
                    <th>[% 'Date' | gettext %]</th>
                </tr>
            </thead>
            <tbody>
                [% FOREACH stat IN stats %]
                    <tr>
                        <td>[% stat.total_added %]</td>
                        <td>[% stat.total_updated %]</td>
                        <td>[% stat.date %]</td>
                    </tr>
                [% END %]
            </tbody>
        </table>
        [% END %]

        [% IF search && !updates %]
        <br/>
        <h2>[% 'Updates Lines' | gettext %]</h2>
        <form method="post" action="#">
                <input type="hidden" name="op" value="cud-show-updates">
                <input type="hidden" name="class" value="[% CLASS %]" />
                <input type="hidden" name="csrf_token" value="[% csrf_token %]">
                <input type="hidden" name="method" value="[% METHOD %]" />
                <table><tr>
                <td><input type="search" name="search" class="form-control" id="datatable-search-input" placeholder="[% 'Search' | gettext %]" value="[% search %]"></td>
                <td><input type="submit" value="[% 'Search' | gettext %]" /></td>
                </tr></table>
            <br/>
        </form>            
        <div class="alert alert-warning" role="alert">
            [% 'Nothing was found for your request' | gettext %]
        </div>
        [% END %]

        [% IF updates.size > 0 %]
        <br/>
        <h2>[% 'Updates Lines' | gettext %]</h2>

        <form method="post" action="#">
                <input type="hidden" name="op" value="cud-show-updates">
                <input type="hidden" name="class" value="[% CLASS %]" />
                <input type="hidden" name="csrf_token" value="[% csrf_token %]">
                <input type="hidden" name="method" value="[% METHOD %]" />
                <table><tr>
                <td><input type="search" name="search" class="form-control" id="datatable-search-input" placeholder="[% 'Search' | gettext %]" value="[% search %]"></td>
                <td><input type="submit" value="[% 'Search' | gettext %]" /></td>
                </tr></table>
            <br/>
        </form>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>[% 'User' | gettext %]</th>
                    <th>[% 'Change Description' | gettext %]</th>
                    <th>[% 'Change Timestamp' | gettext %]</th>
                </tr>
            </thead>
            <tbody>
                [% FOREACH update IN updates %]
                    <tr>
                        <td>
                            <span class="js-update" title="Add to search">[% update.firstname %]</span> 
                            <span class="js-update" title="Add to search">[% update.surname %]</span> 
                            (borrowernumber: <a target="_blank" href="/cgi-bin/koha/members/moremember.pl?borrowernumber=[% update.record_id %]">[% update.record_id %])</a>
                        </td>
                        <td class="update">[% update.change_description %]</td>
                        <td>[% update.change_timestamp %]</td>
                    </tr>
                [% END %]
            </tbody>
        </table>
        
            [% IF total_pages>0 %]
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    [% IF prev_page >0 %]
                        <li class="page-item"><a class="page-link" href="?class=[% CLASS %]&method=[% METHOD %]&op=cud-show-updates&page=[% prev_page %]&search=[% search %]">[% 'Previous page' | gettext %]</a></li>
                    [% END %]

                    [% SET max_pages = 10 %] 

                    [% SET start_page = current_page - 5 %]
                    [% SET end_page = current_page + 4 %]

                    [% IF start_page < 1 %]
                        [% SET start_page = 1 %]
                        [% SET end_page = 10 %]
                    [% ELSIF end_page > total_pages %]
                        [% SET end_page = total_pages %]
                        [% SET start_page = total_pages - 9 %]
                    [% END %]

                    [% SET page_number = start_page %] 

                    [% WHILE page_number <= end_page %]
                        [% IF page_number >= 1 && page_number <= total_pages %] 
                            [% SET is_current = (page_number == current_page) %]
                            <li class="page-item [% IF is_current %]active[% END %]">
                                <a class="page-link" href="?class=[% CLASS %]&method=[% METHOD %]&op=cud-show-updates&page=[% page_number %]&search=[% search %]">
                                    [% page_number %]
                                </a>
                            </li>
                        [% END %]
                        [% SET page_number = page_number + 1 %] 
                    [% END %]

                    [% IF next_page >0 %]
                        <li class="page-item"><a class="page-link" href="?class=[% CLASS %]&method=[% METHOD %]&op=cud-show-updates&page=[% next_page %]&search=[% search %]">[% 'Next page' | gettext %]</a></li>
                    [% END %]

                    [% IF total_pages>10 && next_page < total_pages - 1 && page_number < total_pages %]
                        <li class="page-item"><a class="page-link" href="?class=[% CLASS %]&method=[% METHOD %]&op=cud-show-updates&page=[% total_pages %]&search=[% search %]">[% 'Last' | gettext %], [% total_pages %] [% 'page' | gettext %]</a></li>
                    [% END %]
                    
                </ul>
            </nav>
            [% END %]

        [% END %]


      </main>
    </div>
    <div class="col-sm-2 col-sm-pull-10">
      <aside>
        [% INCLUDE 'tools-menu.inc' %]
      </aside>
    </div> <!-- /.col-sm-2.col-sm-pull-10 -->
  </div>

</div>

<script>
  var tdElements = document.querySelectorAll(".truncate-text");
  tdElements.forEach(function(td) {
    var originalText = td.textContent;
    if (originalText.length > 128) {
      var truncatedText = originalText.slice(0, 8);
      td.textContent = truncatedText;
      td.setAttribute("title", originalText);
    }
  });

var tdElementsWithClass = document.querySelectorAll('td.update');
tdElementsWithClass.forEach(function(td) {
    var text = td.innerHTML.trim();
    text = text.replace(/("[^"]*")/g, function(match, group) {
        if (group) {
            if (group === '""' || group === '"";') {
                return group;
            } else {
                return '<span class="js-update">' + group + '</span>';
            }
        } else {
            return match;
        }
    });
    td.innerHTML = text;
});

var updateElements = document.querySelectorAll('.js-update');
    updateElements.forEach(function(element) {
        element.addEventListener('click', function() {
            var clickedText = element.textContent.trim();
            //var clickedText = element.textContent.trim().replace(/"/g, '');
            var searchInput = document.querySelector('input[name="search"]');
            searchInput.value = clickedText;
        });
});

</script>

<style>
    .js-update {
        cursor: pointer; 
        text-decoration: underline; 
        color: #004d99; 
    }
    .js-update:hover {
        text-decoration: none; 
        color: #538200;
    }
</style>

[% INCLUDE 'intranet-bottom.inc' %]

